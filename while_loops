# Task1. Print numbers from 1 to 10 using a while loop.
num = 1
while num <= 5:
    print(num)
    num +=1

# the same solution with for loop:
for i in range(1,6):
    print(i)


# Task2.  Print even numbers from 2 to 20
num = 2
while num <= 20:
    print(num)
    num += 2

# the same solution with for loop:
for i in range (2,21,2):
    print(i)

#Task3. Print the multiplication table of 5 (from 1 to 10).

num = 1
while num <= 10:
    print(f"5 x {num} = {5 * num}")
    num += 1

# the same solution with for loop:
for i in range(1, 11):
    print(f'{i} * 5 = {i * 5}')

#Task4: Ask the user to enter a password until they enter the correct one ("python123")
# Set the correct password
correct_password = "python123"

# Ask the user to enter a password
user_input = input("Enter the password: ")

# Keep asking until the password is correct
while user_input != correct_password:
    print("Incorrect password. Try again.")
    user_input = input("Enter the password: ")

print("Access granted!")

# Limit to 3 attempts using a for loop:

correct_password = "python123"

for attempt in range(3):
    user_input = input("Enter the password: ")
    if user_input == correct_password:
        print("Access granted!")
        break
    else:
        print("Incorrect password.")

else:
    print("Too many attempts. Access denied.")

# the same solution with for loop:
for i in range(10, 0, -1):
    print(i)

# Task5: Print numbers from 10 to 1 (reverse order).
num = 10
while num >= 1:
    print(num)
    num -= 1

# the same solution with for loop:
for i in range(10, 0, -1):
    print(i)

#Task 6: Print all letters in the word "Python" one by one using a while loop.
word = "Python"
index = 0

while index < len(word):
    print(word[index])
    index += 1

# the same solution with for loop:
word = 'Python'
for letter in word:
    print(letter)

# Task7: Print the sum of numbers from 1 to 100
total = 0
num = 1

while num <= 100:
    total += num
    num += 1

print(f'The sum of these numbers is: {total}')


# the same solution with for loop:
total = 0
for num in range(1, 101):
    total += num
print(f'The sum of these numbers is: {total}')

# Task8: Ask the user to enter a number. Keep doubling it until it becomes greater than 100.
num = int(input('Enter a number: '))
while num <= 100:
    num *= 2
print(f'The number after doubling is: {num}')


 # Task9: Ask the user to guess a secret number (e.g., 7) until they guess correctly.

secret_number = 7

while True:
    guess = int(input("Guess the secret number: "))
    if guess == secret_number:
        print("Congratulations! You guessed it right.")
        break
    else:
        print("Wrong! Try again.")

# Task10. Count down from 5 to 1, and print "Liftoff!" at the end.

count = 5

while count > 0:
    print(count)
    count -= 1

print("Liftoff!")

# the same solution with for loop:
for i in range(5, 0, -1):
    print(i)

print("Liftoff!")



ðŸ§  Slightly More Challenging Tasks (Level 2)

#Task#11: Ask the user to enter numbers until they enter 0, then print the total sum.
total = 0
num = int(input("Enter a number (0 to stop): "))

while num != 0:
    total += num
    num = int(input("Enter another number (0 to stop): "))

print(f"The total sum is: {total}")


#Task 12: Ask the user to type "yes" to continue, repeat the message until they do.

response = input('Type "yes" to continue: ').lower()

while response != "yes":
    response = input('Please type "yes" to continue: ').lower()

print("Thank you! Continuing...")


#Task 13. Ask the user to enter a number and print its factorial using a while loop.

num = int(input("Enter a number: "))
factorial = 1
n = num

while n > 1:
    factorial *= n
    n -= 1

print(f"The factorial of {num} is: {factorial}")

#Task 14. Ask the user to enter 5 names and print them one by one using a while loop.

names = []
count = 0

while count < 5:
    name = input(f"Enter name #{count + 1}: ")
    names.append(name)
    count += 1

print("\nThe names you entered are:")
index = 0
while index < 5:
    print(names[index])
    index += 1


 # Task15: Simulate a simple ATM: Start with balance = 1000. Ask to withdraw until balance < 0 or user types "exit".
balance = 1000

while balance >= 0:
    user_input = input('Enter amount to withdraw or type "exit" to quit: ').lower()

    if user_input == "exit":
        print(f"Exiting. Your final balance is: {balance}")
        break

    if not user_input.isdigit():
        print("Please enter a valid number or 'exit'.")
        continue

    amount = int(user_input)

    balance -= amount
    if balance < 0:
        print("Insufficient funds! Your balance is negative.")
        break
    else:
        print(f"Withdrawal successful. New balance: {balance}")



# Hereâ€™s a simplified version without extra input validation, focusing on the core logic:

balance = 1000

while balance >= 0:
    user_input = input('Enter amount to withdraw or "exit" to quit: ').lower()
    if user_input == "exit":
        print(f"Goodbye! Your final balance is: {balance}")
        break
    amount = int(user_input)
    balance -= amount
    if balance < 0:
        print("Balance is negative! Transaction not allowed.")
        break
    print(f"Withdrawal successful. New balance: {balance}")



# Using a for loop for this task is tricky because you donâ€™t know how many withdrawals the user will make â€” itâ€™s naturally suited for a while loop. But if you want to use a for loop, you have to limit the number of attempts upfront.
# Hereâ€™s an example with a maximum of 10 withdrawals:

balance = 1000

for _ in range(10):  # limit max 10 withdrawals
    user_input = input('Enter amount to withdraw or "exit" to quit: ').lower()
    if user_input == "exit":
        print(f"Goodbye! Your final balance is: {balance}")
        break
    amount = int(user_input)
    balance -= amount
    if balance < 0:
        print("Balance is negative! Transaction not allowed.")
        break
    print(f"Withdrawal successful. New balance: {balance}")
else:
    print("Reached maximum number of transactions.")


